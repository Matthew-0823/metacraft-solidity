pragma solidity 0.8.25;

contract MyToken {
    // Declare public variables
    string public tokenName = "Karl";
    string public tokenAbbrv = "Matthew";

    // Declare a uint (unsigned integer)
    uint public totalSupply = 0;

    // Declare a public mapping to store token balances for each address
    mapping(address => uint) public balance;

    // Next is we gonna create a mint or new token and assign them in specific address
    function mint(address _address, uint _value) public {
        totalSupply += _value;
        balance[_address] += _value;
    }

    // Next is we gonna create a burn for existing token from specific address.
    function burn(address _address, uint _value) public {
        // Check if the balance of the address is greater than or equal to the value to be burned
        require(balance[_address] >= _value, "Insufficient balance");
        totalSupply -= _value;
        balance[_address] -= _value;
    }
}
